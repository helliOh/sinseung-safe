<%
	let rootPath = '../';

	let y = (new Date()).getFullYear();
	let years = [];
	for(let i = y; i >= 1970; i--)
		years.push(i);
%>

<div id="commission">
	<div class="content-wrapper">
		<% if(user.mb_level <= 3){ %>
		<h2 class="card">내역 조회</h2>
		<table class="search-table card">
			<thead>
				<tr>
					<th width="30%">소속</th>
					<th width="30%">담당</th>
					<th width="20%"></th>
				</tr>
			</thead>
			<tbody>
				<tr class="center-align">
					<td>
						<select name="search-company">
							<option value="">전체</option>
							<% 
							if(typeof dataPackage.company != 'undefined'){
								for(let i in dataPackage.company.body){ %>
								<option value="<%=dataPackage.company.body[i].value%>"><%=dataPackage.company.body[i].value%></option>
							<% } 
							}%>
						</select>
						
						<% if(user.mb_level == 3){ %>
						<script>		
							$('select[name="search-company"] option[value="<%=user.mb_company%>"]').attr('selected',true);
							$('select[name="search-company"]').attr('disabled',true);
						</script>
						<% } %>
					</td>
					<td>
						<div class="member-find-btn"></div>
						<input type="hidden" name="mb_no" value="">
					</td>
					<td>
						<input type="submit" class="btn submit" value="검색">
					</td>
				</tr>
			</tbody>
		</table>
		<% } %>
		<h2 class="card" style="margin-top: 50px;">연간 입금내역</h2>
		<table id="scrollable-table" class="yearly-income-table card center-align">
			<thead>
				<tr>
					<th colspan="17" class="left-align" style="width: 100%;">
						연도
						<select name="search-year" style="width: 100px;">
							<% for(let i in years){ %>
							<option value="<%=years[i]%>"><%=years[i]%></option>
							<% } %>
						</select>
					</th>
				</tr>
			</thead>
			<tbody>
				<tr data-column>
					<th data-cms-no>회원번호</th>
					<th data-client>업체명</th>
					<th data-due-date>약정일</th>
					<th>기본금액</th>
					<th>1월</th>
					<th>2월</th>
					<th>3월</th>
					<th>4월</th>
					<th>5월</th>
					<th>6월</th>
					<th>7월</th>
					<th>8월</th>
					<th>9월</th>
					<th>10월</th>
					<th>11월</th>
					<th>12월</th>
					<th>합계</th>
				</tr>
				<!-- yearly income data -->
			</tbody>
		</table>
		<%- include(rootPath+'parts/table-pagination.ejs'); %>
		<div class="btn export-excel year" style="padding: 0 5px;">엑셀로 내보내기</div>


		<h2 class="card" style="margin-top: 50px;">월간 입금내역</h2>
		<table id="scrollable-table" class="card monthly-income-table sync-table center-align">
			<thead>
				<tr>
					<th colspan="8" class="left-align" width="100%;">
						월
						<select name="search-month" style="width: 100px;">
							<option value="1">1</option>
							<option value="2">2</option>
							<option value="3">3</option>
							<option value="4">4</option>
							<option value="5">5</option>
							<option value="6">6</option>
							<option value="7">7</option>
							<option value="8">8</option>
							<option value="9">9</option>
							<option value="10">10</option>
							<option value="11">11</option>
							<option value="12">12</option>
						</select>
					</th>
				</tr>
			</thead>
			<tbody>
				<tr data-column>
					<th data-date>결제일</th>
					<th data-cms-no>회원번호</th>
					<th data-client>회원명</th>
					<th data-account>결제번호</th>
					<th data-req-amount>신청금액</th>
					<th data-res-amount>결제금액</th>
					<th data-status>상태</th>
					<th data-manager>담당</th>
				</tr>
				<!--
				<tr data-row></tr>
				-->
			</tbody>
		</table>
		<%- include(rootPath+'parts/table-pagination.ejs'); %>
		<div class="btn export-excel month" style="padding: 0 5px;">엑셀로 내보내기</div>
	</div>
</div>

<table id="modal" class="find-member card table-form1">
	<thead>
		<tr><th colspan="3" class="left-align">회원찾기</th></tr>
		<tr><td colspan="3">
			<form>
				<input type="text" name="mb_name" placeholder="회원명" autocomplete="off">
				<input type="submit" value="찾기">
			</form>
		</td></tr>
		<tr class="header">
			<td width="20%">회원명</td>
			<td width="40%">아이디</td>
			<td width="40%">이메일</td>
		</tr>
	</thead>
	<tbody>
		<tr class="result-row blank">
			<td colspan="3">검색 결과가 없습니다.</td>
		</tr>
	</tbody>
</table>

<script src="/js/payment/overdue.js"></script>
<script>
	$(document).ready(function(){
		gInitMemberFindBtn();
		let date = new Date();
		let overdue = new Overdue(date);

		$('select[name="search-month"] option[value="'+date.getFullYear()+'"]').attr('selected',true);
		$('select[name="search-month"] option[value="'+(date.getMonth()+1)+'"]').attr('selected',true);
	});
</script>
<!-- <script>
	let date = new Date();
	let syncData = null;
	let monthData = null;
	let yearData = null;

	let yearTable = {
		'totalRow': 0,
		'rowsPerPage': 100,
		'currentPage': 1,
		'endPage': 0,
		'DOM': $('.yearly-income-table+.table-pagination'),
	};
	let monthTable = {
		'totalRow': 0,
		'rowsPerPage': 100,
		'currentPage': 1,
		'endPage': 0,
		'DOM': $('.monthly-income-table+.table-pagination'),
	};
	function initYearTablePagination(){
		yearTable.DOM.css('display','block');
		yearTable.totalRow = yearData.length;
		yearTable.currentPage = 1;
		yearTable.endPage = Math.ceil((yearTable.totalRow/yearTable.rowsPerPage));

		if(yearTable.totalRow <= yearTable.rowsPerPage){
			yearTable.DOM.css('display','none');
			return;	
		}
		yearTable.DOM.find('[data-start]').text(yearTable.currentPage);
		yearTable.DOM.find('[data-end]').text(yearTable.endPage);

		yearTable.DOM.find('.btn').unbind().click(function(){
			if($(this).hasClass('front')){
				if(yearTable.currentPage==1) 
					return;
				yearTable.currentPage = 1;
			}else if($(this).hasClass('prev')){
				if(yearTable.currentPage==1) 
					return;
				yearTable.currentPage--;
			}else if($(this).hasClass('next')){
				if(yearTable.currentPage == yearTable.endPage)
					return;
				yearTable.currentPage++;
			}else if($(this).hasClass('rear')){
				if(yearTable.currentPage == yearTable.endPage)
					return;
				yearTable.currentPage = yearTable.endPage;
			}
			
			yearTable.DOM.find('[data-start]').text(yearTable.currentPage);
			yearTable.DOM.find('[data-end]').text(yearTable.endPage);

			drawYearlyIncomeTable();
		});
	};

	function initMonthTablePagination(){
		monthTable.DOM.css('display','block');
		monthTable.totalRow = monthData.length;
		monthTable.currentPage = 1;
		monthTable.endPage = Math.ceil((monthTable.totalRow/monthTable.rowsPerPage));

		if(monthTable.totalRow <= monthTable.rowsPerPage){
			monthTable.DOM.css('display','none');
			return;	
		}
		monthTable.DOM.find('[data-start]').text(monthTable.currentPage);
		monthTable.DOM.find('[data-end]').text(monthTable.endPage);
		monthTable.DOM.find('.btn').unbind().click(function(){
			if($(this).hasClass('front')){
				if(monthTable.currentPage==1) 
					return;
				monthTable.currentPage = 1;
			}else if($(this).hasClass('prev')){
				if(monthTable.currentPage==1) 
					return;
				monthTable.currentPage--;
			}else if($(this).hasClass('next')){
				if(monthTable.currentPage == monthTable.endPage)
					return;
				monthTable.currentPage++;
			}else if($(this).hasClass('rear')){
				if(monthTable.currentPage == monthTable.endPage)
					return;
				monthTable.currentPage = monthTable.endPage;
			}
			
			monthTable.DOM.find('[data-start]').text(monthTable.currentPage);
			monthTable.DOM.find('[data-end]').text(monthTable.endPage);

			drawMonthlyIncomeTable();
		});
	}

	$('.search-table .member-find-btn').unbind().click(function(){
		$(this).text('');
		$(this).siblings('input[name="mb_no"]').val('');
		$('.bg').addClass('active');
		$('#modal.find-member').addClass('active');
		$('.bg').unbind().click(function(){
			$(this).removeClass('active');
			$('#modal.find-member').removeClass('active');
		});
	});
	$('.find-member form').unbind().submit(function(e){
		e.preventDefault();
		if(ajaxInProgress)
			return;

		ajaxInProgress = true;
		$.ajax({
			url: '/member/search',
			headers: {
                'Authorization' : 'Basic ' + userToken
            },
			type: 'POST',
			data : $(this).serialize(),
		}).done(function(data){
			if(data.head.status == false){
				alert('Error occured');
				for( i in data.head.err)
					console.log(data.head.err[i]);
			}else{ // success
				
				$('#modal.find-member tbody .result-row').remove();
				let length = data.body.length;
				if(length == 0)
					$('#modal.find-member tbody').append('<tr class="result-row blank"><td colspan="3">검색 결과가 없습니다.</td></tr>');
				else{
					for(i in data.body){
						let $tr = $('<tr class="result-row"></tr>');
						$tr.attr('mb_no', data.body[i].mb_no);
						$tr.attr('mb_name', data.body[i].mb_name);
						$tr.attr('mb_id', data.body[i].mb_id);
						$tr.attr('mb_email', data.body[i].mb_email);

						$tr.append('<td>'+data.body[i].mb_name+'</td>');
						$tr.append('<td>'+data.body[i].mb_id+'</td>');
						$tr.append('<td>'+data.body[i].mb_email+'</td>');

						$('#modal.find-member tbody').append($tr);
					}

					$('#modal.find-member .result-row:not(.blank)').unbind().click(function(){
						let check = confirm('해당 회원을 선택하시겠습니까?');

						if(!check)
							return;

						let mb_no = $(this).attr('mb_no');
						let mb_name = $(this).attr('mb_name');
						let targetName, targetNo;

						$('.search-table .member-find-btn').text(mb_name);
						$('.search-table input[name="mb_no"]').val(mb_no);
						
						$('#modal.find-member').removeClass('active');
						$('.bg').removeClass('active');
					});
				}
				ajaxInProgress = false;
			}
		});
	});

	$('.search-table .btn.submit').click(function(){
		setYearData();
		search();
	});

	function search(){
		if(ajaxInProgress)
				return;

		$('.bg').addClass('active');
		ajaxInProgress = true;

		$.ajax({
			type: 'POST',
            headers: {
                'Authorization' : 'Basic ' + userToken
            },
			url: '/payment/search/synced',
			data: {
				'company': $('select[name="search-company"]').val(),
				'manager': $('input[name="mb_no"]').val(),
				'year': $('select[name="search-year"]').val()
			},
		}).done(function(data){
			if(data.head.status == false){
				alert('Error occured');
				for( i in data.head.err)
					console.log(data.head.err[i]);
			}else{ // success
				syncData = data.body;
				setYearData();
				initYearTablePagination();
				update();
			}
			
			ajaxInProgress = false;
			$('.bg').removeClass('active');
		});
	};
	function update(){
		monthData = [];
		let year = $('select[name="search-year"] option:selected').val();
		let month = '0'+$('select[name="search-month"] option:selected').val();
		month.slice(2);
		let dateStr = year+'-'+month+'-';
		for(let i in syncData){
			if(syncData[i].cms_date.indexOf(dateStr) == 0){
				monthData.push(syncData[i]);
			}
		}

		initMonthTablePagination();
		drawMonthlyIncomeTable();
	};
	function setYearData(){
		let data = new Set();
		yearData = [];
		
		for(let i in syncData){
			if(syncData[i].cms_status.search('실패') != -1)
				continue;

			if(data.has(syncData[i].cms_no)){
				let idx = -1;
				for(j in yearData)
					if(yearData[j].cms_no == syncData[i].cms_no){
						idx = j;
						break;
					}
				month = parseInt(syncData[i].cms_date.split('-')[1]);
				yearData[idx].date[month].value+=syncData[i].cms_req_amount;
				yearData[idx].date[month].count++;
				yearData[idx].totalValue += syncData[i].cms_req_amount;
				yearData[idx].totalCount++;
			}else{
				let temp = {};
				temp.cms_no = syncData[i].cms_no;
				temp.date = {};
				for(let j=1; j<=12; j++){
					temp.date[j] = {
						'value': 0,
						'count': 0,
					};
				}
				temp.req_amount = syncData[i].cms_req_amount;
				temp.client = syncData[i].cms_client;
				temp.dueDate = syncData[i].cms_date.split('-')[2];

				let currentDate = parseInt(syncData[i].cms_date.split('-')[1]);
				temp.date[currentDate].value+=syncData[i].cms_res_amount;
				temp.date[currentDate].count++;

				temp.totalValue = syncData[i].cms_res_amount;;
				temp.totalCount = 1;

				yearData.push(temp);
				data.add(syncData[i].cms_no);
			}
		}

		initYearTablePagination();
		drawYearlyIncomeTable();
	};
	function drawYearlyIncomeTable(){
		let $table = $('.yearly-income-table tbody');
		$table.find('tr:not([data-column])').remove();

		if(yearData.length == 0){
			$table.append('<tr><td colspan="17" style="padding: 25px !important; text-align: center; width: 100%;">데이터가 없습니다.</td></tr>');
			return;
		}
		//for(let i in yearData){
		for(let i = ((yearTable.currentPage-1)*yearTable.rowsPerPage); i < (yearTable.currentPage*yearTable.rowsPerPage); i++){
		if(i >= yearTable.totalRow)
			break;
			let $tr = $('<tr></tr>');
			let totalValue = 0;
			let totalCount = 0;
			$tr.append('<td data-cms-no>'+yearData[i].cms_no+'</td>');
			$tr.append('<td data-client>'+yearData[i].client+'</td>');
			$tr.append('<td data-due-date>'+yearData[i].dueDate+'</td>');
			$tr.append('<td data-req-amount>'+yearData[i].req_amount.toLocaleString('en')+'</td>');
			for(let j = 1; j <= 12; j++){
				let $month = $('<td data-month-'+j+'></td>');
				$month.append(
					yearData[i].date[j].value.toLocaleString('en')+'<br>'+
					yearData[i].date[j].count+'건');
				$tr.append($month);
			}
			
			let $total = $('<td data-total></td>');
			$total.append(yearData[i].totalValue.toLocaleString('en')+'<br>'+yearData[i].totalCount+'건');
			$tr.append($total);

			$table.append($tr);
		}
	};
	function drawMonthlyIncomeTable(){
		$('.bg').addClass('active');

		let $table = $('.monthly-income-table tbody');
		$table.find('tr:not([data-column])').remove();

		if(monthData.length==0)
			$table.append('<tr><td colspan="8" style="padding: 25px 0;text-align: center; width: 100%;">데이터가 없습니다.</td></tr>');
		else{
			//for(let i in temp){
			for(let i = ((monthTable.currentPage-1)*monthTable.rowsPerPage); i < (monthTable.currentPage*monthTable.rowsPerPage); i++){
				if(i >= monthTable.totalRow)
					break;
				let $tr = $('<tr></tr>');
				$tr.append('<td data-date>'+monthData[i].cms_date+'</td>');
				$tr.append('<td data-no>'+monthData[i].cms_no+'</td>');
				$tr.append('<td data-client>'+monthData[i].cms_client+'</td>');
				$tr.append('<td data-account>'+monthData[i].cms_account_no+'</td>');
				$tr.append('<td data-req>'+monthData[i].cms_req_amount.toLocaleString('en')+'</td>');
				$tr.append('<td data-res>'+monthData[i].cms_res_amount.toLocaleString('en')+'</td>');
				$tr.append('<td data-status>'+monthData[i].cms_status+'</td>');
				$tr.append('<td data-manager>'+monthData[i].cms_manager_name+'</td>');

				$table.append($tr);
			}
		}

		setTimeout(function(){
			$('.bg').removeClass('active');
		},300);
	};

	$(document).ready(function(){
		$('select[name="search-month"] option[value="'+date.getFullYear()+'"]').attr('selected',true);
		$('select[name="search-month"] option[value="'+(date.getMonth()+1)+'"]').attr('selected',true);
		
		search();
	});

	$('select[name="search-year"]').change(function(){
		search();
	});
	$('select[name="search-month"]').change(function(){
		update();
	});
	$('#scrollable-table tbody').scroll(function(e){
		$(this).find('[data-column]').css('transform', 'translateY('+$(this).scrollTop()+'.1px)');	
	})

	$('.btn.export-excel.year').click(function(){
		if(ajaxInProgress)
			return;

		console.log(yearData);
	});
	$('.btn.export-excel.month').click(function(){
		if(ajaxInProgress)
			return;

		let data = {
			'head': [
				{'key': 'cms_date', 'value': '결제일'},
				{'key': 'cms_no', 'value': '회원번호'},
				{'key': 'cms_client', 'value': '회원명'},
				{'key': 'cms_account_no', 'value': '결제번호'},
				{'key': 'cms_req_amount', 'value': '신청금액'},
				{'key': 'cms_res_amount', 'value': '결제금액'},
				{'key': 'cms_status', 'value': '상태'},
				{'key': 'cms_manager_name', 'value': '담당'},
			],
			'body': monthData
		};

		console.log(data);
	});
</script> -->